"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/modalOTP.tsx":
/*!*************************************!*\
  !*** ./src/components/modalOTP.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst OTPModal = (param)=>{\n    let { fetchForms } = param;\n    _s();\n    const [phone, setPhone] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [otp, setOtp] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isPhoneEntered, setIsPhoneEntered] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [referenceCode, setReferenceCode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"17evu4ze\");\n    const [isFormVisible, setIsFormVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showModal, setShowModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [tokenAuth, setTokenAuth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [canRequestOTP, setCanRequestOTP] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [secondsLeft, setSecondsLeft] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(50);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!canRequestOTP) {\n            const countdown = setInterval(()=>{\n                setSecondsLeft((prev)=>{\n                    if (prev <= 1) {\n                        clearInterval(countdown);\n                        setCanRequestOTP(true);\n                        return 0;\n                    }\n                    return prev - 1;\n                });\n            }, 1000);\n            return ()=>clearInterval(countdown);\n        }\n    }, [\n        canRequestOTP\n    ]);\n    const handlePhoneSubmit = async ()=>{\n        try {\n            const res = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/api/send-otp\", {\n                phone\n            });\n            setReferenceCode(res.data.refno);\n            setToken(res.data.token);\n            setIsPhoneEntered(true);\n        } catch (err) {\n            console.error(err);\n            alert(\"Failed to send OTP.\");\n        }\n    };\n    const handleRequestOTP = ()=>{\n        setCanRequestOTP(false);\n        setSecondsLeft(50);\n        handlePhoneSubmit();\n    };\n    const handleOTPSubmit = async ()=>{\n        try {\n            const res = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/api/verify-otp\", {\n                phone,\n                otp,\n                reference: token\n            });\n            setTokenAuth(res.data.token);\n            setIsFormVisible(true);\n        } catch (err) {\n            console.error(err);\n            alert(\"OTP verification failed.\");\n        }\n    };\n    const handleSubmit = async (event)=>{\n        event.preventDefault();\n        const formData = {\n            phone,\n            name: event.currentTarget.elements.namedItem(\"name\").value,\n            description: event.currentTarget.description.value\n        };\n        try {\n            await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/api/forms\", formData, {\n                headers: {\n                    Authorization: \"Bearer \".concat(tokenAuth)\n                }\n            });\n            fetchForms();\n            closeModal();\n        } catch (error) {\n            console.error(error);\n            alert(\"Form submission failed.\");\n        }\n    };\n    const closeModal = ()=>{\n        setShowModal(false);\n        setIsPhoneEntered(false);\n        setIsFormVisible(false);\n        setTokenAuth(\"\");\n        setPhone(\"\");\n        setOtp(\"\");\n        setToken(\"\");\n        setReferenceCode(\"17evu4ze\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n            className: \"bg-gradient-to-r from-cyan-500 to-teal-400 hover:bg-gradient-to-l hover:from-teal-500 hover:to-cyan-400 text-white font-semibold px-6 py-3 rounded-md shadow-md text-lg justify-\",\n            onClick: ()=>setShowModal(true),\n            \"aria-label\": \"Open blessing form text-white\",\n            children: \"เขียนคำอวยพร\"\n        }, void 0, false, {\n            fileName: \"/Users/sert/Documents/GitHub/ts-wedding-day/src/components/modalOTP.tsx\",\n            lineNumber: 94,\n            columnNumber: 13\n        }, undefined)\n    }, void 0, false);\n};\n_s(OTPModal, \"vWsDK5CLMnnOcpMCYlbCosgsNu4=\");\n_c = OTPModal;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OTPModal);\nvar _c;\n$RefreshReg$(_c, \"OTPModal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/modalOTP.tsx\n"));

/***/ })

});